{"version":3,"file":"static/js/186.1bc381ad.chunk.js","mappings":"iMAsCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BC,QAAQC,IAAI,YAAaF,GACzBC,QAAQC,IAAI,oBAAqBF,EAAKG,SACtCT,EAAWM,EAAKG,QACjB,GACF,GAAE,CAACR,KAGF,+BACE,2BACIF,IACA,oFAEM,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASW,QAAS,EACfX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBACGD,EAAM,iBAAaA,GAAW,8BAEjC,uBAAIC,GAAoB,+BAJjBF,EADC,IAQZ,+BAIX,C,kMClCKG,EAAM,6BACNC,EAAM,2CAECC,EAAgB,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kCAA0CC,IADrC,cACxBG,EADwB,yBAGvBA,EAAWb,MAHY,2CAAH,qDAMhBc,EAAc,mCAAG,WAAMC,GAAN,uFACHH,EAAAA,EAAAA,IAAA,UACpBH,EADoB,2BACEC,EADF,kBACeK,IAFZ,cACtBF,EADsB,yBAKrBA,EAAWb,MALU,2CAAH,sDAQdgB,EAAe,mCAAG,WAAMrB,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oBAA4Bd,EAA5B,YAAuCe,IADnC,cACvBG,EADuB,yBAGtBA,EAAWb,MAHW,2CAAH,sDAMfiB,EAAY,mCAAG,WAAMtB,GAAN,uFACDiB,EAAAA,EAAAA,IAAA,UACpBH,EADoB,oBACLd,EADK,oBACce,IAFb,cACpBG,EADoB,yBAKnBA,EAAWb,MALQ,2CAAH,sDAQZF,EAAe,mCAAG,WAAMH,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,UACpBH,EADoB,oBACLd,EADK,oBACce,IAFV,cACvBG,EADuB,yBAKtBA,EAAWb,MALW,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","service/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovie } from 'service/movies-api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewsMovie(movieId).then(data => {\n      console.log('data :>> ', data);\n      console.log('data.results :>> ', data.results);\n      setReviews(data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {!reviews && (\n          <p>Sorry, this information is not available for this movie</p>\n        )}\n        {reviews?.length > 0\n          ? reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <h2>\n                  {author ? `Author:${author}` : 'No information available'}\n                </h2>\n                <p>{content ? content : 'No information available'}</p>\n              </li>\n            ))\n          : 'No information available'}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org';\nconst KEY = 'api_key=345007f9ab440e5b86cef51be6397df1';\n\nexport const getMovieTrending = async () => {\n  const responsive = await axios.get(`${URL}/3/trending/movie/week?${KEY}`);\n\n  return responsive.data;\n};\n\nexport const getSearchMovie = async search => {\n  const responsive = await axios.get(\n    `${URL}/3/search/movie?${KEY}&query=${search}`\n  );\n\n  return responsive.data;\n};\n\nexport const getDetailsMovie = async movieId => {\n  const responsive = await axios.get(`${URL}/3/movie/${movieId}?${KEY}`);\n\n  return responsive.data;\n};\n\nexport const getCastMovie = async movieId => {\n  const responsive = await axios.get(\n    `${URL}/3/movie/${movieId}/credits?${KEY}`\n  );\n\n  return responsive.data;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const responsive = await axios.get(\n    `${URL}/3/movie/${movieId}/reviews?${KEY}`\n  );\n\n  return responsive.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviewsMovie","then","data","console","log","results","length","map","id","author","content","URL","KEY","getMovieTrending","axios","responsive","getSearchMovie","search","getDetailsMovie","getCastMovie"],"sourceRoot":""}